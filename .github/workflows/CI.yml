name: CI

on:
  push:
  pull_request:
  release:
    types: [published]

jobs:
  commits:
    name: commits
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: webiny/action-conventional-commits@v1.3.0

  linter:
    name: linter
    runs-on: ubuntu-latest
    steps:
      - name: Create builder image
        run: docker build . -t vangelis_builder

      - name: Clippy
        run: > 
          docker run --rm
          -v ${{ github.workspace }}:/workspace
          vangelis_builder
          cargo clippy --all --all-features -- -D warnings

      - name: Format
        run: >
          docker run --rm
          -v ${{ github.workspace }}:/workspace
          vangelis_builder
          cargo fmt --all -- --check

  linux:
    name: linux (${{ matrix.arch }})
    runs-on: ubuntu-latest
    permissions: write-all
    needs: linter
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64, aarch64]
        include:
          - arch: x86_64
            target: x86_64-unknown-linux-gnu
          - arch: aarch64
            target: aarch64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v4

      - name: Create builder image
        run: >
          docker build .
          -t vangelis_builder

      - name: Build project
        run: >
          docker run --rm
          -v ${{ github.workspace }}:/workspace
          -e ARCH_NAME=${{ matrix.arch }}
          -e TARGET_ARCH=${{ matrix.target }}
          vangelis_builder

      - name: Save debian artifact
        uses: actions/upload-artifact@v4
        with:
          name: vangelis-debian-${{ matrix.arch }}.deb
          path: ./vangelis-debian-${{ matrix.arch }}.deb
          if-no-files-found: error
  
      - name: Save redhat artifact
        uses: actions/upload-artifact@v4
        with:
          name: vangelis-redhat-${{ matrix.arch }}.rpm
          path: ./vangelis-redhat-${{ matrix.arch }}.rpm
          if-no-files-found: error
  
      - name: Save archlinux artifact
        uses: actions/upload-artifact@v4
        with:
          name: vangelis-archlinux-${{ matrix.arch }}.pkg.tar.zst
          path: ./vangelis-archlinux-${{ matrix.arch }}.pkg.tar.zst
          if-no-files-found: error
  
      - name: Upload packages
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./vangelis-debian-${{ matrix.arch }}.deb
            ./vangelis-redhat-${{ matrix.arch }}.rpm
            ./vangelis-archlinux-${{ matrix.arch }}.pkg.tar.zst
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  mac_os:
    name: macOS (${{ matrix.arch }})
    runs-on: macos-latest
    permissions: write-all
    needs: linter
    strategy:
      fail-fast: false
      matrix:
        arch: [intel, silicon]
        include:
          - arch: intel
            target: x86_64-apple-darwin
          - arch: silicon
            target: aarch64-apple-darwin

    steps:
      - uses: actions/checkout@v4

      - name: Install toolchain
        run: rustup target add ${{ matrix.target }}

      - name: Build binary
        run: cargo build --release --target=${{ matrix.target }}

      - name: Save artifact
        uses: actions/upload-artifact@v4
        with:
          name: vangelis-macos-${{ matrix.arch }}
          path: target/${{ matrix.target }}/release/vangelis
          if-no-files-found: error

      - name: Set binary name
        if: github.event_name == 'release'
        run: cp target/${{ matrix.target }}/release/vangelis vangelis-macos-${{ matrix.arch }}

      - name: Upload binary
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: vangelis-macos-${{ matrix.arch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  windows:
    name: windows (${{ matrix.arch_name }})
    runs-on: windows-latest
    permissions: write-all
    needs: linter
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64, aarch64]
        include:
          - arch: x86_64
            target: x86_64-pc-windows-msvc
          - arch: aarch64
            target: aarch64-pc-windows-msvc

    steps:
      - uses: actions/checkout@v4

      - name: Install toolchain
        run: rustup target add ${{ matrix.target }}

      - name: Build binary
        run: cargo build --release --target=${{ matrix.target }}

      - name: Save artifact
        uses: actions/upload-artifact@v4
        with:
          name: vangelis-windows-${{ matrix.arch }}.exe
          path: target/${{ matrix.target }}/release/vangelis.exe
          if-no-files-found: error

      - name: Set binary name
        if: github.event_name == 'release'
        run: cp target/${{ matrix.target }}/release/vangelis.exe vangelis-windows-${{ matrix.arch }}.exe

      - name: Upload binary
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: vangelis-windows-${{ matrix.arch }}.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}